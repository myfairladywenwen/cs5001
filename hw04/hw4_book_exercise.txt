hw04_book_exercises5.9 Exercises 1 through 5, and 13 from the textbook.5.9 Exercises 1In Listing 5.4 (addnonnegatives.py) could the condition of the if statement have used > instead of >= and achieved the same results? Why? Answer: It could use > instead of >= in the if statement.  
Because the while condition entry >= 0  controls the loop, and when the entry = 0, we can still get into the while loop.  
The thing the if statement does is to add the entry up to the sum, and 0 has no effect to our sum value.
2In Listing 5.4 (addnonnegatives.py) could the condition of the while statement have used > instead of >= and achieved the same results? Why? 
Answer: No.  
The while loop has to use >= because we initiate the entry as 0, and if the condition for the while loop is entry > 0, then the loop will never be executed.  
Only when user input is only 0 can we get the same result as the original version, that is, 0.3In Listing 5.4 (addnonnegatives.py) what would happen if the statement entry = int(input()) # Get the value ?were moved out of the loop? Is moving the assignment out of the loop a good or bad thing to do? Why? Answer: If the statement entry = int(input()) were moved out of the loop, we will assign the user input to entry before we enter the while loop, 
and if it is a negative value, the loop will not be executed.  
If it is a non-negative value, we entered the loop.  And then, we again check whether it is non- negative, if it is, we add it to sum.  And then, we will come back to the first line of the loop with THIS entry and again check whether it is a non-negative, and so on.  So if the first user input is non-negative, the loop will be infinite. So it is bad to move the assignment out of the loop, as the assignment will only be executed once, before we enter the loop.4How many asterisks does the following code fragment print? a=0?while a < 100:              print('*', end='')a += 1 print() 
Answer: 100.5 How many asterisks does the following code fragment print? a=0?while a < 100:              print('*', end='')print()
?Answer: It is an infinite loop.  ÔaÕ will never be incremented and remain as 0 and so a < 100 will always be true.13Provide the exact sequence of integers specified by each of the following range expressions. 
(a) range(5)0, 1, 2, 3, 4(b) range(5, 10)5, 6, 7, 8,9(c) range(5, 20, 3) 5,8,11,14,17(d) range(20, 5, -1) 20,19,18,17,16,15,14,13,12,11,10,9,8,7,6(e) range(20, 5, -3) 20,17,14,11,8(f) range(10, 5)nothing(g) range(0)nothing(h) range(10, 101, 10) 10,20,30,40,50,60,70,80,90,100(i) range(10, -1, -1) 10,9,8,7,6,5,4,3,2,1,0(j) range(-3, 4)-3,-2,-1,0,1,2,3
(k) range(0, 10, 1) 
0,1,2,3,4,5,6,7,8,9
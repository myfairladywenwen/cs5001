1. Did you attempt to make your computer player very smart
-- i.e., do something more clever than just pick a random legal move?
Answer:
The AI I designed would take the cell which will get him the longest list of
disks to flip.  This kind of design would be smarter than just pick a random
legal move, but on the other hand, it is not the smartest way: it focuses on
the current, but ignores the whole picture.

2. If so, were you able to accomplish this?
Is your computer player as smart as you would like?
Answer:
Yes.
Yes.

3. How did you determine which piece to play next?
Tell us about your “pick next move” algorithm
Answer:
To pick a next move for AI, I use a dictionary to help while checking the
present legal cells. I loop through the 64 cells, check each cell, and if it is
legal, I note it down as the key in my dictionary.  Meanwhile, I note down the
disks that can be flipped as a list if the ai takes this cell as his move.
So finally I will get a dictionary whose key value pairs are legal moves
(a row-column tuple) and the corresponding disks to flip(a list).
And I will give AI the key(i.e., row-column tuple) whose value(i.e., the list)
is the longest.

4. How often did your computer program beat you, or your friends,
or whoever tested it out for you?
The AI wins 50% or so.

5. How would you improve it in the future?
To improve, there are two ways:
First, I can set a timer for the game.  Because if human player has no time
limit, human can calculate and pick the longest-flip-list cell as well.  So the
chance for AI to win drops.  If time is limit for human, some players can not
calculate as fast as the program, then AI will win more.
Second, I can make my AI smarter by letting him to choose not the longest list
to flip for present, but to consider the whole picture for future, by which I
mean AI would take as far as to the edge of the board as he can to make a move.
By doing so, AI will occupy most of the "land" in the long run.